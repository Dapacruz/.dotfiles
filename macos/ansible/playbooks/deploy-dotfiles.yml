---
- name: Deploy .dotfiles on macOS
  hosts: localhost
  gather_facts: true

  tasks:
    - name: Install Ansible Galaxy community.general collection
      command: ansible-galaxy collection install community.general
      register: result
      changed_when: "'Nothing to do.' not in result.stdout"

    - name: Clone .dotfiles repository
      ansible.builtin.git:
        repo: https://github.com/Dapacruz/.dotfiles.git
        dest: ~/.dotfiles
        clone: yes
        update: no

    - name: Check if Oh My Zsh is Installed
      ansible.builtin.stat:
        path: ~/.oh-my-zsh
      register: ohmyzsh

    - name: Install Oh My Zsh
      ansible.builtin.shell:
        cmd: ~/.dotfiles/macos/packages/ohmyzsh-install.sh
      when: not ohmyzsh.stat.exists

    - name: Check if Hombrew is Installed
      ansible.builtin.stat:
        path: /opt/homebrew/bin/brew
      register: homebrew

    - name: Install Homebrew
      block:
        - name: Download Homebrew installation script
          get_url:
            url: https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh
            dest: /tmp/install_homebrew.sh
            mode: '0755'
          become: false

        - name: Run Homebrew installation script
          ansible.builtin.shell: CI=1 /tmp/install_homebrew.sh
          args:
            executable: /bin/bash
          become: false
          register: homebrew_result
          failed_when: "'FAILED' in homebrew_result.stderr"

        - name: Update .zshrc
          ansible.builtin.lineinfile:
            path: /home/{{ ansible_user_id }}/.zshrc
            line: |

              eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

        - name: Blend Mac CPU architectures for compatibility
          block:
            - name: Create Homebrew ARM64 directory
              ansible.builtin.file:
                path: /opt/homebrew
                state: directory

            - name: Create Homebrew ARM64 symlink
              ansible.builtin.file:
                src: /usr/local/bin
                dest: /opt/homebrew/bin
                state: link
          when: ansible_facts.processor.startswith("Intel")
      when: not homebrew.stat.exists

    - name: Update Homebrew
      community.general.homebrew:
        update_homebrew: true
        upgrade_all: true

    - name: Install Homebrew taps
      community.general.homebrew_tap:
        state: present
        name:
          - felixkratz/formulae
          - fluxcd/tap
          - jesseduffield/lazygit
          - koekeishiya/formulae
          - nikitabobko/tap
          - teamookla/speedtest

    - name: Install Homebrew packages
      community.general.homebrew:
        state: present
        install_options:
          - formula
          - quiet
        name:
          - age
          - aha
          - ansible
          - arping
          - awk
          - bat
          - bfg
          - btop
          - certbot
          - cheat
          - cilium-cli
          - cmake
          - cmatrix
          - coreutils
          - cowsay
          - cscope
          - dfu-util
          - dust
          - enscript
          - entr
          - fd
          - felixkratz/formulae/borders
          - ffmpeg
          - ffmpeg@4
          - ffmpegthumbnailer
          - figlet
          - fluxcd/tap/flux
          - fping
          - fzf
          - gh
          - git
          - git-delta
          - glances
          - gnu-sed
          - gnuradio
          - go
          - gping
          - graphviz
          - guile
          - hackrf
          - helm
          - highlight
          - hopenpgp-tools
          - htop
          - httpie
          - hubble
          - iftop
          - imagemagick
          - ipcalc
          - iperf
          - iperf3
          - jpeg
          - jq
          - k3d
          - k9s
          - kubecolor
          - lazygit
          - lf
          - lolcat
          - lsd
          - luarocks
          - mactop
          - massren
          - minikube
          - mtr
          - multitail
          - neovim
          - nload
          - nmap
          - nuttcp
          - pass
          - php
          - pinentry-mac
          - prettier
          - procs
          - pyqt
          - qemu
          - qpdf
          - re2
          - ripgrep
          - rlwrap
          - rust
          - sd
          - sl
          - sops
          - sphinx-doc
          - ssh-copy-id
          - starship
          - stow
          - stylua
          - swaks
          - switchaudio-osx
          - talosctl
          - telnet
          - the_silver_searcher
          - tmux
          - toilet
          - tokei
          - trash
          - tre-command
          - uv
          - w3m
          - watch
          - wget
          - xmlstarlet
          - xq
          - yarn
          - ykman
          - ykpers
          - yq
          - yt-dlp
          - z
          - zoxide
          - zsh
          - zsh-syntax-highlighting

    - name: Install Homebrew casks
      community.general.homebrew_cask:
        state: present
        install_options:
          - quiet
        name:
          - aerospace
          - anythingllm
          - bartender
          - bettertouchtool
          - calibre
          - cleanshot
          - container
          - discord
          - elgato-stream-deck
          - folx
          - font-victor-mono-nerd-font
          - google-chrome
          - karabiner-elements
          - keepassxc
          - keycastr
          - kitty
          - lm-studio
          - maccy
          - obsidian
          - ollama
          - ollama-app
          - pixelsnap
          - postman
          - powershell
          - rancher
          - rar
          - raspberry-pi-imager
          - raycast
          - stats
          - swish
          - vagrant
          - vagrant-manager
          - vivaldi
          - vlc

    - name: Check if Python venv dir exists
      ansible.builtin.stat:
        path: ~/venv
      register: venv

    - name: Create Python venv
      block:
        - name: Create Python venv dir
          ansible.builtin.file:
            path: ~/venv
            state: directory

        - name: Create Python venv
          ansible.builtin.shell: python3.13 -m venv ~/venv/3.13
          args:
            executable: /bin/bash
          register: python_result
          failed_when: "'FAILED' in python_result.stderr"
          become: false
      when: not venv.stat.exists

    - name: Stow dotfiles
      ansible.builtin.shell:
        cmd: ~/.dotfiles/macos/stow/stow.sh
        chdir: ~/.dotfiles/macos/stow

    - name: Clone Tmux TPM repository
      ansible.builtin.git:
        repo: https://github.com/tmux-plugins/tpm
        dest: ~/.config/tmux/plugins/tpm
        clone: yes
        update: yes

